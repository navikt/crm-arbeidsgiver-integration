# Unique name for this workflow
name: Validate Metadata

# Definition when the workflow should run
on:
  pull_request:
    branches:
      - "*"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      # Install Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install

      # Checkout the code in the pull request
      - name: "Checkout source code"
        uses: actions/checkout@v2

      # Store secret for dev hub
      - name: "Populate auth file with PROD_SFDX_URL secret"
        shell: bash
        run: "echo ${{ secrets.PROD_SFDX_URL}} > ./PROD_SFDX_URL.txt"

      # Authenticate dev hub
      - name: "Authenticate Dev Hub"
        run: "sfdx force:auth:sfdxurl:store -f ./PROD_SFDX_URL.txt -a devhub -d"

      # Remove auth files
      - name: "Remove auth files"
        if: always()
        run: "rm -f ./PROD_SFDX_URL.txt"

      # Delete unpackagable
      - name: "Delete unpackagable"
        run: rm -rf unpackagable

      # Create scratch org
      - name: "Create scratch org"
        run: "sfdx force:org:create -f config/package-scratch-def.json -a scratch-org -s -d 1"

      # Install sfpowerkit plugin used to install multiple packages only by version number
      - name: "Install sfpowerkit plugin"
        run: "echo y | sfdx plugins:install sfpowerkit"

      # Install packages this repo is dependant on
      - name: "Install dependant packages"
        run: "sfdx sfpowerkit:package:dependencies:install -u scratch-org -r -a -w 20 -k '1:${{ secrets.PACKAGE_KEY }} 2:${{ secrets.PACKAGE_KEY }} 3:${{ secrets.PACKAGE_KEY }} 4:${{ secrets.PACKAGE_KEY }} 5:${{ secrets.PACKAGE_KEY }} 6:${{ secrets.PACKAGE_KEY }} 7:${{ secrets.PACKAGE_KEY }} 8:${{ secrets.PACKAGE_KEY }} 9:${{ secrets.PACKAGE_KEY }} 10:${{ secrets.PACKAGE_KEY }}'"

      # Deploy source to scratch org
      - name: "Push source to scratch org"
        run: "sfdx force:source:push"
      
      # Assign permsets
      - name: "Assign permsets"
        run: |
          for row in $(cat config/ssdx-config.json | jq -r '.permsets_to_assign[]'); do
          sfdx force:user:permset:assign -n ${row}
          done

      # Run Apex tests in scratch org
      - name: "Run Apex tests"
        run: "sfdx force:apex:test:run -l RunLocalTests -c -r human -d ./tests/apex -w 30"

      # Delete scratch orgs
      - name: "Delete scratch org"
        if: always()
        run: "sfdx force:org:delete -p -u scratch-org"
